/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.awt.Image;
import database.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.ImageIcon;
import model.UserAuthenticationDirectory;
import javax.swing.JOptionPane;
import javax.swing.JSplitPane;
import model.Cart;
import model.CityDir;
import model.Community;
import model.CompanyDirectory;
import model.Customer;
import model.CustomerDirectory;
import model.DeliveryBoyDirectory;
import model.Ordermgt;
import model.Payment;
import model.PaymentDir;
import model.UserAuthentication;
import special.Smtp;
import javax.swing.JOptionPane;

/**
 *
 * @author Abhishek
 */
public class CustomerRegistrationJPanel extends javax.swing.JPanel {

    private JSplitPane splitPane;
    private CityDir cityDirectory;
    private CustomerDirectory customerDirectory;
    private CompanyDirectory companyDirectory;
    private Community community;
    private UserAuthenticationDirectory userauthenticationdirectory;
    private DeliveryBoyDirectory deliveryBoyDirectory;
    private Ordermgt orderManagement;
    private Payment payment;

    /**
     * Creates new form MainCustomerJPanel
     */
    public CustomerRegistrationJPanel(CityDir cityDirectory, Ordermgt orderManagement, Community community, CustomerDirectory customerDirectory, CompanyDirectory companyDirectory, UserAuthenticationDirectory userauthenticationdirectory, JSplitPane splitPane, DeliveryBoyDirectory deliveryBoyDirectory) {
        initComponents();
        String imgDir = System.getProperty("user.dir")+"/src/main/java/IMAGES/";
        customerRegistrationLabel.setIcon(new ImageIcon(new ImageIcon(imgDir+"customerregistration.png").getImage().getScaledInstance(1000, 300, Image.SCALE_DEFAULT)));
        welcomeLabel.setIcon(new ImageIcon(new ImageIcon(imgDir+"signupwelcome.gif").getImage().getScaledInstance(200, 200, Image.SCALE_DEFAULT)));
        roadLabel.setIcon(new ImageIcon(new ImageIcon(imgDir+"road.png").getImage().getScaledInstance(1300, 300, Image.SCALE_DEFAULT)));
        this.cityDirectory = cityDirectory;
        this.community = community;
        this.splitPane = splitPane;
        this.customerDirectory = customerDirectory;
        this.companyDirectory = companyDirectory;
        this.userauthenticationdirectory = userauthenticationdirectory;
        this.deliveryBoyDirectory = deliveryBoyDirectory;
        this.orderManagement = orderManagement;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nameTextField = new javax.swing.JTextField();
        save = new javax.swing.JButton();
        nearestLandMarkTextField = new javax.swing.JTextField();
        addressTextField = new javax.swing.JTextField();
        usernameTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        emailAddressTextField = new javax.swing.JTextField();
        customerRegistrationLabel = new javax.swing.JLabel();
        roadLabel = new javax.swing.JLabel();
        welcomeLabel = new javax.swing.JLabel();
        passwordTextField = new javax.swing.JPasswordField();

        setBackground(new java.awt.Color(255, 255, 255));

        nameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameTextFieldActionPerformed(evt);
            }
        });

        save.setBackground(new java.awt.Color(71, 43, 29));
        save.setFont(new java.awt.Font("Algerian", 1, 18)); // NOI18N
        save.setForeground(new java.awt.Color(255, 255, 255));
        save.setText("Save");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Name");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Nearest LandMark");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Address");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Username");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("Password");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setText("Email Address");

        customerRegistrationLabel.setBackground(new java.awt.Color(255, 255, 255));
        customerRegistrationLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        welcomeLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(customerRegistrationLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(roadLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(93, Short.MAX_VALUE)
                        .addComponent(welcomeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(save, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(75, 75, 75)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(nameTextField)
                                    .addComponent(addressTextField)
                                    .addComponent(emailAddressTextField)
                                    .addComponent(usernameTextField)
                                    .addComponent(nearestLandMarkTextField)
                                    .addComponent(passwordTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE))))
                        .addGap(0, 87, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(customerRegistrationLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(welcomeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nearestLandMarkTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(emailAddressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(usernameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(passwordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(34, 34, 34)
                .addComponent(save, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(roadLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(8, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        // TODO add your handling code here:

        if (nameTextField.getText().length() == 0) {
            JOptionPane.showMessageDialog(this, "Mandatory name field is empty");
            return;
        }

        if (!nameTextField.getText().matches("[a-zA-Z]+")) {
            JOptionPane.showMessageDialog(this, "Name field should only have alphabets");
            return;
        }

        if (nearestLandMarkTextField.getText().length() == 0) {
            JOptionPane.showMessageDialog(this, "Mandatory name field is empty");
            return;
        }

        if (addressTextField.getText().length() == 0) {
            JOptionPane.showMessageDialog(this, "Mandatory name field is empty");
            return;
        }

        String emailAddress = emailAddressTextField.getText();

        if (emailAddress.length() == 0) {
            JOptionPane.showMessageDialog(this, "Mandatory Email Address field is empty");
            return;
        }

        String regex = "^[\\w!#$%&'*+/=?`{|}~^-]+(?:\\.[\\w!#$%&'*+/=?`{|}~^-]+)*@(?:[a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,6}$";

        Pattern pattern = Pattern.compile(regex);
        Matcher matcher = pattern.matcher(emailAddress);
        if (!matcher.matches()) {
            JOptionPane.showMessageDialog(this, "Please enter a valid email address");
            return;
        }

        for (int i = 0; i < userauthenticationdirectory.getUserAuthenticationList().size(); i++) {
            UserAuthentication userauthentication = userauthenticationdirectory.getUserAuthenticationList().get(i);
            if (userauthentication.getUserName().equalsIgnoreCase(usernameTextField.getText())
                    && userauthentication.getUserType().equalsIgnoreCase("Customer")) {
                JOptionPane.showMessageDialog(this, "Customer username already exits, please login directly");
                return;
            }
        }

        Customer customer = customerDirectory.addNewCustomer();
        customer.setUserName(usernameTextField.getText());
        customer.setCustomerClosestLandmark(nearestLandMarkTextField.getText());
        customer.setCustomerAddress(addressTextField.getText());
        customer.setCustomerName(nameTextField.getText());
        customer.setEmailAddress(emailAddress);
        
        Connection obj = new Connection();
        java.sql.Connection con = obj.getConnection();
        
        String query = "INSERT INTO `customer`(`userName`, `customerClosestLandmark`, `customerAddress`, `customerName`,emailAddress) VALUES (?,?,?,?,?)";
        PreparedStatement pst = null;
        try {
            pst = obj.getConnection().prepareStatement(query);
            pst.setString(1, usernameTextField.getText());
            pst.setString(2, nearestLandMarkTextField.getText());
            pst.setString(3, addressTextField.getText());
            pst.setString(4, nameTextField.getText());
            pst.setString(5, emailAddress);
            //        if(cpass.equals(password)){
            pst.executeUpdate();
            System.out.println("Inserted customer.");
        } catch (SQLException ex) {
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }

        Cart cart = new Cart();
        customer.setCart(cart);
        community.setCustomerDirectory(customerDirectory);

        PaymentDir paymentDirectory = new PaymentDir();
        customer.setPaymentDirectory(paymentDirectory);

        UserAuthentication userauthentication = userauthenticationdirectory.addNewUserAuthentication();
        userauthentication.setUserName(usernameTextField.getText());
        userauthentication.setPassword(passwordTextField.getText());
        userauthentication.setUserType("Customer");
        
        
        
        
        query = "INSERT INTO `user_auth`(`userName`, `password`, `userType`, companyName, cityName) VALUES (?,?,?,?,?)";
        pst = null;
        try {
            pst = obj.getConnection().prepareStatement(query);
            pst.setString(1, usernameTextField.getText());
            pst.setString(2, passwordTextField.getText());
            pst.setString(3, "InventoryAdmin");
            //pst.setString(4, companyName);
            //pst.setString(5, cityName);
            //        if(cpass.equals(password)){
            pst.executeUpdate();
            System.out.println("Inserted user.");
            con.close();
        } catch (SQLException ex) {
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        

        String Subject = "Thank You " + customer.getCustomerName() + " for creating an account with Instacart clone!";
        String data = "Hi " + customer.getCustomerName() + ",\n"
                + "\n"
                + "Thank you for joining with Instacart! We hope to never disappoint you in your journey with us and provide our quality services!\n"
                + "\n"
                + "Thanks You\n"
                + "Instartcart customer support team";
        try {
            Smtp smtp = new Smtp(customer.getEmailAddress(), Subject, data);
            JOptionPane.showMessageDialog(this, customer.getCustomerName() + ", your Registration is completed");
            LoginJPanel loginJPanel = new LoginJPanel(cityDirectory, orderManagement, community, customerDirectory, companyDirectory, userauthenticationdirectory, splitPane, deliveryBoyDirectory);
            splitPane.setRightComponent(loginJPanel);
            setDefault();
        } catch (Exception exception) {
            JOptionPane.showMessageDialog(null, "Please enter a valid email address");
            return;
        }
    }//GEN-LAST:event_saveActionPerformed

    private void setDefault() {
        usernameTextField.setText("");
        passwordTextField.setText("");
        nameTextField.setText("");
        nearestLandMarkTextField.setText("");
        addressTextField.setText("");
    }

    private void nameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameTextFieldActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField addressTextField;
    private javax.swing.JLabel customerRegistrationLabel;
    private javax.swing.JTextField emailAddressTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JTextField nearestLandMarkTextField;
    private javax.swing.JPasswordField passwordTextField;
    private javax.swing.JLabel roadLabel;
    private javax.swing.JButton save;
    private javax.swing.JTextField usernameTextField;
    private javax.swing.JLabel welcomeLabel;
    // End of variables declaration//GEN-END:variables
}
