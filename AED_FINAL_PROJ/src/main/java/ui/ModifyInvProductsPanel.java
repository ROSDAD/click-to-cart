/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JSplitPane;
import javax.swing.table.DefaultTableModel;
import model.CityDir;
import model.InventoryProduct;
import model.InventoryProductDir;

/**
 *
 * @author hrish
 */
public class ModifyInvProductsPanel extends javax.swing.JPanel {

    /**
     * Creates new form ModifyInvProductsPanel
     */
    
    private String cityName;
    private String companyName;
    private CityDir cityDir; 
    private JSplitPane splitPane; 
    private InventoryProductDir invProdDir;
    private InventoryProduct invProd;
    private String productName;
    private float price;
    private int inventoryQty;
            
    public ModifyInvProductsPanel() {
        initComponents();
    }

    ModifyInvProductsPanel(String cityName, String companyName, CityDir cityDir, JSplitPane splitPane, InventoryProductDir invProdDir) {
        
        initComponents();
        
        this.invProdDir = invProdDir;
        this.splitPane = splitPane; 
        this.cityDir = cityDir;
        
        populateProductTable();
    }
    
    private void populateProductTable() {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        
        // House Table        
        DefaultTableModel model = (DefaultTableModel) tblProducts.getModel();
        model.setRowCount(0);
        
        if(invProdDir.getInventoryProductDir() != null) {
        for(InventoryProduct invProd : invProdDir.getInventoryProductDir()) {
            
            Object[] row = new Object[11];
            //row[0] = house;
            row[0] = invProd.getProductName();
            row[1] = invProd.getPrice();
            row[2] = invProd.getInventoryQty();
            
            model.addRow(row);
        }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblProducts = new javax.swing.JTable();
        btnCreateProduct = new javax.swing.JButton();
        updateProduct = new javax.swing.JButton();
        btnDeleteProduct = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtPrice = new javax.swing.JTextField();
        txtQuantity = new javax.swing.JTextField();
        txtProductName = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();

        tblProducts.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Product Name", "Price", "Quantity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblProducts.setPreferredSize(new java.awt.Dimension(904, 638));
        jScrollPane1.setViewportView(tblProducts);

        btnCreateProduct.setText("Create Product");
        btnCreateProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateProductActionPerformed(evt);
            }
        });

        updateProduct.setText("Update Product");
        updateProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateProductActionPerformed(evt);
            }
        });

        btnDeleteProduct.setText("Delete Product");
        btnDeleteProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteProductActionPerformed(evt);
            }
        });

        jLabel3.setText("Price:");

        jLabel4.setText("Quantity:");

        txtQuantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtQuantityActionPerformed(evt);
            }
        });

        jLabel5.setText("Product Name:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(122, 122, 122)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnDeleteProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel3)
                                .addComponent(jLabel4))
                            .addGap(62, 62, 62)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 482, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(btnCreateProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(updateProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel5)
                            .addGap(31, 31, 31)
                            .addComponent(txtProductName, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(218, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnDeleteProduct)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtProductName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCreateProduct)
                    .addComponent(updateProduct))
                .addContainerGap(83, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnCreateProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateProductActionPerformed
        // TODO add your handling code here:

        productName = txtProductName.getText();
        price = Integer.parseInt(txtPrice.getText());
        inventoryQty = Integer.parseInt(txtQuantity.getText());

        if(!productName.matches("[a-zA-Z]+")) {
            JOptionPane.showMessageDialog(this, "Product Name should have only alphabets.");
            return;
        }

        if(productName.length() == 0) {
            JOptionPane.showMessageDialog(this, "All fields are mandatory.");
            return;
        }

        InventoryProduct i  = invProdDir.addNewInventoryProduct();

        i.setInventoryQty(inventoryQty);
        i.setPrice(price);
        i.setProductName(productName);

        JOptionPane.showMessageDialog(this, "Product created!");

        populateProductTable();
    }//GEN-LAST:event_btnCreateProductActionPerformed

    private void updateProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateProductActionPerformed
        // TODO add your handling code here:

        productName = txtProductName.getText();
        price = Integer.parseInt(txtPrice.getText());
        inventoryQty = Integer.parseInt(txtQuantity.getText());

        if(!productName.matches("[a-zA-Z]+")) {
            JOptionPane.showMessageDialog(this, "Name should have only alphabets.");
            return;
        }

        if(productName.length() == 0) {
            JOptionPane.showMessageDialog(this, "All fields are mandatory.");
            return;
        }

        int selectedRowIndex = tblProducts.getSelectedRow();

        if (selectedRowIndex < 0 ) {

            JOptionPane.showMessageDialog(this, "Please select a product to update.");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) tblProducts.getModel();
        String selectedProduct = (String) model.getValueAt(selectedRowIndex, 0);

        ArrayList<InventoryProduct> invProd = invProdDir.getInventoryProductDir();

        for(InventoryProduct prod: invProd) {
            
            if(prod.getProductName().equalsIgnoreCase(selectedProduct)) {

                prod.setProductName(productName);
                prod.setPrice(price);
                prod.setInventoryQty(inventoryQty);
            }
        }

        JOptionPane.showMessageDialog(this, "Product updated!");

        populateProductTable();
    }//GEN-LAST:event_updateProductActionPerformed

    private void btnDeleteProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteProductActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblProducts.getSelectedRow();

        if (selectedRowIndex < 0 ) {

            JOptionPane.showMessageDialog(this, "Please select a product.");
            return;
        }

        DefaultTableModel model;
        model = (DefaultTableModel) tblProducts.getModel();
        String productName = (String) model.getValueAt(selectedRowIndex, 0);

        ArrayList<InventoryProduct> invDir = invProdDir.getInventoryProductDir();
        
        
        for(InventoryProduct i: invDir) {
            
            if(i.getProductName().equalsIgnoreCase(productName)) {
                
                invProdDir.deleteInventoryProduct(i);
                
                populateProductTable();
                JOptionPane.showMessageDialog(this, "Product Deleted!");            
                break;
            }
        }
        
    }//GEN-LAST:event_btnDeleteProductActionPerformed

    private void txtQuantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtQuantityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtQuantityActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCreateProduct;
    private javax.swing.JButton btnDeleteProduct;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblProducts;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtProductName;
    private javax.swing.JTextField txtQuantity;
    private javax.swing.JButton updateProduct;
    // End of variables declaration//GEN-END:variables
}
